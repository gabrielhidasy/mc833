1 - lo, wlp2s0 e enp0s25, o TCPDump não pode capturar em nenhuma
dessas interfaces como usuario comum, mas pode capturar dados na
interface bluetooth0.
Ele também não tem permissão para capturar nas interfaces usb ou
nas usadas pelo dbus.
Ele não consegue usar nenhuma interface que exija o uso de
raw_sockets pois meu usuario não está em nenhum grupo que tenha a
permissão para isso. E nem as interfaces usbmon pois elas dependem
de arquivos que meu usuario não tem permissão de leitura
(/sys/kernel/debug/usb/usbmon/1t)

2 -
maple:  - 128.30.4.223
willow: - 128.30.4.222

3 -
maple:  - 00:16:ea:8d:e5:8a
willow: -

4 -
maple:  - commplex-link?
willow: - 39675

5 -
O primeiro tempo no log é 01:34:41.473036, o ultimo 01:34:44.339015
aparentemente a sessão durou 2.865979s
Nesse periodo fomos do seq 1 na linha 6 ao 1567673 na linha 1912,
das linhas 1 a 5 temos logs de ARP e de 1913 a 1918 acks
Logo tivemos 1567673 bytes, 1.4950Mb,  em 2.8659s, ou 534.188kbps

6 - O pacote com seq 1473:2921 foi capturado no linha 8
(tempo = 01:34:41.474225), seu ack (2921) foi recebido na linha 22
(tempo = 01:34:41.482047), temos aqui um RTT de 0.00782s (7.82ms)

Já o pacote com seq 13057:14505 está na linha 35 do log,
(tempo = 01:34:41.489825) e seu ack na linha 46 (tempo = 01:34:41.499373)
O RTT nesse caso foi de 0.00954s (9.54ms)

Os primeiro pacote (mais rápido) foi do host willow para o host maple, o
seguinte foi de maple para willow, a diferença de tempo poderia ser?

7 -
Three Way handshake:
Um ponto caracteristico do three-way handshake é o pacote com as flags
SYN e ACK, esse pode ser encontrado com o comando
"tcpdump -r tcpdump.dat 'tcp[13] = 18'"
Ele foi encontrado na linha em que o tempo = 01:34:41.474055, (linha 4).
A linha 3 é o SYN correspondente e a linha 5 o ACK.
| Mensagem | Fonte  | Destino | Protocolo | Informação relevante (FLAGS) |
| Linha 3  | willow | maple   | TCP       | SYN                          |
| Linha 4  | maple  | willow  | TCP       | SYN,ACK                      |
| Linha 5  | willow | maple   | TCP       | ACK                          | 
(ele também poderia ser encontrado por estar no inicio da conexão)

O Connection Termination pode ser encontrado de forma similar, graças a
flag FIN, mais especificamente FIN-FIN,ACK-ACK
O comando para filtrar pacotes com a flag FIN é 
 tcpdump -r tcpdump.dat 'tcp[tcpflags] & (tcp-fin) != 0'
Que retorna os pacotes com tempo = 01:34:44.311921 (FIN) (linha 1908) e 
01:34:44.339007 (FIN-ACK) (linha 1917), aos 2 se soma o ACK final na linha
1918
| Mensagem   | Fonte  | Destino | Protocolo | Informação relevante (FLAGS) |
| Linha 1908 | willow | maple   | TCP       | FIN                          |
| Linha 1917 | maple  | willow  | TCP       | FIN,ACK                      |
| Linha 1918 | willow | maple   | TCP       | ACK                          |

